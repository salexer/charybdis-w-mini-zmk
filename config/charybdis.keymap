#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>

#define MACRO_PLACEHOLDER 0

// #include "macros.dtsi"
// #include "behaviors.dtsi"
// #include "combos.dtsi"
// #include <behaviors.dtsi>

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    /* input config for mouse move mode */

    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 1 2 3 4 5 6 7>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <2>;
        scale-divisor = <5>;

        // bindings = <&ib_toggle_layer 7>;
    };

    /* input config for snipe mode */

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <8>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <6>;
    };

    /* input config for mouse scroll mode */

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <4>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 14>;
    };

    /* define a resolution down scaler only for INPUT_REL_WHEEL */

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    /* adjust cooldown waiting period for mouse key layer after activated */

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    // ╭──────┬──────┬──────┬──────┬──────┬──────╮  ╭──────┬──────┬──────┬──────┬──────┬──────╮
    //    00     01     02     03    04      05        06     07     08     09     10     11
    // ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
    //    12     13     14     15    16      17        18     19     20     21     22     23
    // ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
    //    24     25     26     27    28      29        30     31     32     33     34     35
    // ╰──────┴──────┴──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┴──────┴──────┴──────╯
    //                         36     37     38        39     40
    //                      ╰──────┴──────┴──────╯  ╰──────┴──────╯
    // #define BASE    0
    // #define NUM     1
    // #define NAV     2
    // #define SYM     3
    // #define GAME    4
    // #define PHOTOS  5
    // #define EXTRAS  6
    // #define MOUSE   7
    // #define SLOW    8
    // #define SCROLL  9

    macros {
        shift: shift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "SHIFT";
        };

        as: as {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;

            label = "AS";
        };

        ru_en_toggle: ru_en_toggle {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "RU_EN_TOGGLE";
        };

        ctrl_plus: ctrl_plus {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_PLUS";
        };
    };

    behaviors {
        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            bindings = <&shift>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        ru_en_ht: ru_en_toggle_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "ru_en_toggle_hold_tap";
            bindings = <&mkp>, <&ru_en_toggle>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
        };

        mo_layer_kp: mo_layer_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_LAYER_KP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
        };

        ru_en_td: ru_en_td {
            compatible = "zmk,behavior-tap-dance";
            label = "RU_EN_TD";
            #binding-cells = <0>;
            tapping-term-ms = <190>;
            bindings = <&ru_en_ht RCLK 0>, <&kp RIGHT_GUI>;
        };
    };

    combos {
        compatible = "zmk,combos";

        LAYER_SYSTEM {
            bindings = <&mo 3>;
            key-positions = <38 39>;
        };

        MOUSE_BUTTON {
            bindings = <&mkp LCLK>;
            key-positions = <19 20>;
        };
        SCROLL_TOGGLE {
            bindings = <&mo 4>;
            key-positions = <20 21>;
            timeout-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E             &kp R  &kp T        &kp Y         &kp U          &kp I      &kp O    &kp P             &kp BSPC
&kp TAB    &kp A  &kp S  &kp D             &kp F  &kp G        &kp H         &kp J          &kp K      &kp L    &as SEMICOLON     &ru_en_td
&kp LSHFT  &kp Z  &kp X  &kp C             &kp V  &kp B        &kp N         &kp M          &as COMMA  &as DOT  &as SINGLE_QUOTE  &kp RSHFT
                         &kp LEFT_CONTROL  &mo 1  &kp SPACE    &lt 2 RETURN  &kp RIGHT_ALT
            >;
        };

        NUMBER_MOUSE {
            bindings = <
&trans  &ctrl_plus C  &trans        &trans            &mkp RCLK        &msc SCRL_UP      &as LEFT_BRACKET   &as N7  &as N8  &as N9        &as MINUS  &kp BACKSPACE
&trans  &ctrl_plus V  &trans        &trans            &trans           &msc SCRL_DOWN    &as RIGHT_BRACKET  &as N4  &as N5  &as NUMBER_6  &as EQUAL  &kp PRINTSCREEN
&trans  &ctrl_plus X  &ctrl_plus A  &ctrl_plus MINUS  &ctrl_plus PLUS  &trans            &kp PIPE           &as N1  &as N2  &as N3        &as SLASH  &trans
                                    &trans            &trans           &trans            &trans             &as N0
            >;
        };

        ARROWS_MEDIA {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_MENU  &trans          &trans  &kp ENTER  &trans  &kp DEL
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT    &kp DOWN_ARROW  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &trans          &trans  &trans     &trans  &trans
                        &trans  &trans  &trans    &trans      &trans
            >;
        };

        /* Extras (Layer 16) */

        BT {
            bindings = <
&kp C_POWER      &none  &none  &none  &none  &kp C_BRIGHTNESS_INC    &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2       &bt BT_SEL 3     &out OUT_TOG     &bt BT_CLR
&kp C_SLEEP      &none  &none  &none  &none  &kp C_BRIGHTNESS_DEC    &none         &kp C_PREVIOUS  &kp C_PLAY_PAUSE   &kp C_STOP       &kp C_NEXT       &none
&kp C_AL_COFFEE  &none  &none  &none  &none  &none                   &none         &kp K_MUTE      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp PRINTSCREEN  &studio_unlock
                               &none  &none  &none                   &none         &none
            >;
        };

        SCROLL {
            bindings = <
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
                              &trans    &trans    &trans    &trans    &trans
            >;
        };
    };
};
